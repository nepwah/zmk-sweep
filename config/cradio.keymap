/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_italian.h"

// Layer definitions
    #define COLEMAK 0
    #define QWERTY 1
    #define SYM 2
    #define EXT 3
    #define FNC 4
    #define SPECIAL 5
	#define SETTINGS 6
// -----------------

&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings
						= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};

    combos {
        compatible = "zmk,combos";
				// both right thumb keys
        combo_settings {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo SETTINGS>;
        };
				// both left thumb keys
				combo_settings {
						timeout-ms = <300>;
						key-positions = <30 31>;
						bindings = <&mo SETTINGS>;
				};
    };

    keymap {
            compatible = "zmk,keymap";

        // COLEMAK Layer
       		default_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B           &kp J &kp L  &kp U     &kp Y   &kp SEMI
		&kp A &kp R &kp S &kp T &kp G           &kp M &kp N  &kp E     &kp I   &kp O
		&kp Z &kp X &kp C &kp D &kp V           &kp K &kp H  &kp COMMA &kp DOT &kp SLASH
             &lt FNC ENTER &lt SYM BSPC         &lt EXT SPACE &kp LSHIFT
		>;
		};

        // QWERTY layer
       		qwerty_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P
		&kp A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L   &kp SEMI
		&kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp SLASH
             &lt FNC ENTER &lt SYM BSPC           &lt EXT SPACE &kp LSHIFT
		>;
		};

        // Numbers and high frequency symbols
       		sym_layer {
		bindings = <
		&kp SLASH &kp N7 &kp N8 &kp N9 &kp MINUS	   &kp LT   &kp GT   &kp TILDE &kp EXCL  &kp AT
		&kp DOT   &kp N4 &kp N5 &kp N6 &kp PLUS        &kp LPAR &kp RPAR &kp SQT   &kp DQT   &kp HASH
		&kp STAR  &kp N1 &kp N2 &kp N3 &kp N0 		   &kp LBKT &kp RBKT &kp DLLR  &kp PRCNT &kp UNDER
					          &kp EQUAL  &none         &mo SPECIAL &trans
		>;
		};

        // Main modifiers and arrow keys
		    ext_layer {
		bindings = <
		&trans  &trans &trans  &trans  &trans    		 &kp F2   &kp F5   &kp LCTRL &kp LALT   &kp DEL
		&trans  &trans &trans  &trans  &trans    		 &kp TAB  &kp LEFT &kp UP    &kp DOWN   &kp RIGHT
		&trans  &trans &trans  &trans  &trans    	     &kp HOME &kp END  &kp PG_UP &kp PG_DN  &kp BSPC
					           &trans  &mo SPECIAL       &none  &trans
		>;
		};

        // Functions
       		fnc_layer {
		bindings = <
		&kp ESC 	&kp LA(GRAVE) &kp SPACE &kp LGUI  &none            &none &kp C_VOL_UP &kp C_NEXT &kp C_BRI_UP &none
		&kp LC(A)   &kp RALT 	  &kp TAB 	&kp LALT  &kp RALT         &none &kp C_VOL_DN &kp C_PP   &kp C_BRI_DN &none
		&kp LC(Z)   &kp LC(X) 	  &kp LC(C) &kp LC(V) &tog QWERTY      &none &kp C_MUTE   &kp C_PREV &none 		  &none
											&none 	  &none            &none &none  
		>;
		};

        // Special.
       		special_layer {
		bindings = <
		&bootloader &none 		 &none 		  &none 	   &none         &none &none 		&none 		 &none 		  &bootloader 
		&none       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none         &none &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &none
		&none       &none 		 &none 		  &none 	   &bt BT_CLR    &none &none 		&none 		 &none 		  &tog QWERTY
											  &none 	   &none         &none &none 
		>;
		};

        // Used to change the keyboard's settings.
       		settings_layer {
		bindings = <
		&none &none &none &none &none               &none &none &none &none &none  
		&none &none &none &none &none				&none &none &none &none &none 
		&none &none &none &none &none               &none &none &none &none &none 
          				  &none &none               &none &none 
		>;
		};
        
	};
};
